// Project data structure
export interface Project {
  id: string;
  name: string;
  description: string;
  longDescription: string;
  gallery: string[];
  category: string;
  features: string[];
  challenges: string[];
  solutions: string[];
  type: "Game" | "Web" | "iOS" | "Android";
  status: "In Development" | "Completed" | "Prototype";
  screenshot: string;
  icon: string;
  duration: string;
  teamSize: string;
  releaseDate: string;
  technologies: string[];
  githubUrl: string;
}

// Sample app data
export const projectList: Project[] = [
  {
    id: "fittracker-pro",
    name: "FitTracker Pro",
    description: "Comprehensive fitness tracking with HealthKit integration",
    longDescription: "",
    gallery: [""],
    category: "Health & Fitness",
    features: [
      "Real-time workout tracking with HealthKit integration",
      "Custom SwiftUI components for data visualization",
      "Core Data persistence with CloudKit sync",
      "Apple Watch companion app with WatchKit",
      "Comprehensive unit and UI test coverage",
      "Accessibility support with VoiceOver",
      "Dark mode and dynamic type support",
      "Privacy-first approach to health data",
    ],
    challenges: [
      "Implementing complex HealthKit data synchronization",
      "Creating responsive charts for workout analytics",
      "Ensuring HIPAA compliance for health data",
      "Optimizing Core Data performance for large datasets",
    ],
    solutions: [
      "Built custom HealthKit wrapper with proper error handling",
      "Developed reusable SwiftUI chart components with animations",
      "Implemented end-to-end encryption for sensitive data",
      "Used NSFetchedResultsController with batch processing",
    ],
    type: "Web",
    status: "Completed",
    screenshot: "/placeholder.svg?height=600&width=300",
    icon: "/placeholder.svg?height=120&width=120",
    duration: "6 months",
    teamSize: "2 developers",
    releaseDate: "2022-05-15",
    technologies: ["SwiftUI", "HealthKit", "Core Data"],
    githubUrl: "",
  },
  {
    id: "cosmic-runner",
    name: "Cosmic Runner",
    description: "Endless runner game with stunning 3D graphics",
    longDescription: "",
    gallery: [""],
    category: "Games",
    features: [
      "Real-time workout tracking with HealthKit integration",
      "Custom SwiftUI components for data visualization",
      "Core Data persistence with CloudKit sync",
      "Apple Watch companion app with WatchKit",
      "Comprehensive unit and UI test coverage",
      "Accessibility support with VoiceOver",
      "Dark mode and dynamic type support",
      "Privacy-first approach to health data",
    ],
    challenges: [
      "Implementing complex HealthKit data synchronization",
      "Creating responsive charts for workout analytics",
      "Ensuring HIPAA compliance for health data",
      "Optimizing Core Data performance for large datasets",
    ],
    solutions: [
      "Built custom HealthKit wrapper with proper error handling",
      "Developed reusable SwiftUI chart components with animations",
      "Implemented end-to-end encryption for sensitive data",
      "Used NSFetchedResultsController with batch processing",
    ],
    type: "Game",
    status: "Completed",
    screenshot: "/placeholder.svg?height=600&width=300",
    icon: "/placeholder.svg?height=120&width=120",
    duration: "9 months",
    teamSize: "3 developers",
    releaseDate: "2023-01-10",
    technologies: ["Unity", "C#", "AdMob"],
    githubUrl: "",
  },
  {
    id: "smart-budget",
    name: "Smart Budget",
    description: "AI-powered budgeting with expense tracking",
    longDescription: "",
    gallery: [""],
    category: "Finance",
    features: [
      "Real-time workout tracking with HealthKit integration",
      "Custom SwiftUI components for data visualization",
      "Core Data persistence with CloudKit sync",
      "Apple Watch companion app with WatchKit",
      "Comprehensive unit and UI test coverage",
      "Accessibility support with VoiceOver",
      "Dark mode and dynamic type support",
      "Privacy-first approach to health data",
    ],
    challenges: [
      "Implementing complex HealthKit data synchronization",
      "Creating responsive charts for workout analytics",
      "Ensuring HIPAA compliance for health data",
      "Optimizing Core Data performance for large datasets",
    ],
    solutions: [
      "Built custom HealthKit wrapper with proper error handling",
      "Developed reusable SwiftUI chart components with animations",
      "Implemented end-to-end encryption for sensitive data",
      "Used NSFetchedResultsController with batch processing",
    ],
    type: "iOS",
    status: "In Development",
    screenshot: "/placeholder.svg?height=600&width=300",
    icon: "/placeholder.svg?height=120&width=120",
    duration: "3 months",
    teamSize: "Solo project",
    releaseDate: "2023-06-30",
    technologies: ["Kotlin", "Compose", "Room"],
    githubUrl: "",
  },
  {
    id: "puzzle-quest",
    name: "Puzzle Quest",
    description: "Mind-bending puzzle game with 500+ levels",
    longDescription: "",
    gallery: [""],
    category: "Games",
    features: [
      "Real-time workout tracking with HealthKit integration",
      "Custom SwiftUI components for data visualization",
      "Core Data persistence with CloudKit sync",
      "Apple Watch companion app with WatchKit",
      "Comprehensive unit and UI test coverage",
      "Accessibility support with VoiceOver",
      "Dark mode and dynamic type support",
      "Privacy-first approach to health data",
    ],
    challenges: [
      "Implementing complex HealthKit data synchronization",
      "Creating responsive charts for workout analytics",
      "Ensuring HIPAA compliance for health data",
      "Optimizing Core Data performance for large datasets",
    ],
    solutions: [
      "Built custom HealthKit wrapper with proper error handling",
      "Developed reusable SwiftUI chart components with animations",
      "Implemented end-to-end encryption for sensitive data",
      "Used NSFetchedResultsController with batch processing",
    ],
    type: "Android",
    status: "Completed",
    screenshot: "/placeholder.svg?height=600&width=300",
    icon: "/placeholder.svg?height=120&width=120",
    duration: "12 months",
    teamSize: "4 developers",
    releaseDate: "2022-03-12",
    technologies: ["SpriteKit", "GameCenter", "Swift"],
    githubUrl: "",
  },
  {
    id: "recipe-master",
    name: "Recipe Master",
    description: "AI-powered recipe suggestions and meal planning",
    longDescription: "",
    gallery: [""],
    category: "Food & Drink",
    features: [
      "Real-time workout tracking with HealthKit integration",
      "Custom SwiftUI components for data visualization",
      "Core Data persistence with CloudKit sync",
      "Apple Watch companion app with WatchKit",
      "Comprehensive unit and UI test coverage",
      "Accessibility support with VoiceOver",
      "Dark mode and dynamic type support",
      "Privacy-first approach to health data",
    ],
    challenges: [
      "Implementing complex HealthKit data synchronization",
      "Creating responsive charts for workout analytics",
      "Ensuring HIPAA compliance for health data",
      "Optimizing Core Data performance for large datasets",
    ],
    solutions: [
      "Built custom HealthKit wrapper with proper error handling",
      "Developed reusable SwiftUI chart components with animations",
      "Implemented end-to-end encryption for sensitive data",
      "Used NSFetchedResultsController with batch processing",
    ],
    type: "iOS",
    status: "Prototype",
    screenshot: "/placeholder.svg?height=600&width=300",
    icon: "/placeholder.svg?height=120&width=120",
    duration: "6 weeks",
    teamSize: "Solo project",
    releaseDate: "2023-08-18",
    technologies: ["Swift", "CoreML", "Firebase"],
    githubUrl: "",
  },
  {
    id: "space-defender",
    name: "Space Defender",
    description: "Classic arcade shooter with modern graphics",
    longDescription: "",
    gallery: [""],
    category: "Games",
    features: [
      "Real-time workout tracking with HealthKit integration",
      "Custom SwiftUI components for data visualization",
      "Core Data persistence with CloudKit sync",
      "Apple Watch companion app with WatchKit",
      "Comprehensive unit and UI test coverage",
      "Accessibility support with VoiceOver",
      "Dark mode and dynamic type support",
      "Privacy-first approach to health data",
    ],
    challenges: [
      "Implementing complex HealthKit data synchronization",
      "Creating responsive charts for workout analytics",
      "Ensuring HIPAA compliance for health data",
      "Optimizing Core Data performance for large datasets",
    ],
    solutions: [
      "Built custom HealthKit wrapper with proper error handling",
      "Developed reusable SwiftUI chart components with animations",
      "Implemented end-to-end encryption for sensitive data",
      "Used NSFetchedResultsController with batch processing",
    ],
    type: "iOS",
    status: "In Development",
    screenshot: "/placeholder.svg?height=600&width=300",
    icon: "/placeholder.svg?height=120&width=120",
    duration: "2 months",
    teamSize: "2 developers",
    releaseDate: "2023-04-25",
    technologies: ["Unity", "C#", "Google Play Games"],
    githubUrl: "",
  },
  {
    id: "mindful-moments",
    name: "MindfulMoments",
    description: "Meditation and mindfulness with guided sessions",
    longDescription: "",
    gallery: [""],
    category: "Health & Fitness",
    features: [
      "Real-time workout tracking with HealthKit integration",
      "Custom SwiftUI components for data visualization",
      "Core Data persistence with CloudKit sync",
      "Apple Watch companion app with WatchKit",
      "Comprehensive unit and UI test coverage",
      "Accessibility support with VoiceOver",
      "Dark mode and dynamic type support",
      "Privacy-first approach to health data",
    ],
    challenges: [
      "Implementing complex HealthKit data synchronization",
      "Creating responsive charts for workout analytics",
      "Ensuring HIPAA compliance for health data",
      "Optimizing Core Data performance for large datasets",
    ],
    solutions: [
      "Built custom HealthKit wrapper with proper error handling",
      "Developed reusable SwiftUI chart components with animations",
      "Implemented end-to-end encryption for sensitive data",
      "Used NSFetchedResultsController with batch processing",
    ],
    type: "iOS",
    status: "Completed",
    screenshot: "/placeholder.svg?height=600&width=300",
    icon: "/placeholder.svg?height=120&width=120",
    duration: "4 months",
    teamSize: "Solo project",
    releaseDate: "2023-01-10",
    technologies: ["Swift", "WatchKit", "AVFoundation"],
    githubUrl: "",
  },
  {
    id: "photo-editor-pro",
    name: "Photo Editor Pro",
    description: "Professional photo editing with AI enhancements",
    longDescription: "",
    gallery: [""],
    category: "Photo & Video",
    features: [
      "Real-time workout tracking with HealthKit integration",
      "Custom SwiftUI components for data visualization",
      "Core Data persistence with CloudKit sync",
      "Apple Watch companion app with WatchKit",
      "Comprehensive unit and UI test coverage",
      "Accessibility support with VoiceOver",
      "Dark mode and dynamic type support",
      "Privacy-first approach to health data",
    ],
    challenges: [
      "Implementing complex HealthKit data synchronization",
      "Creating responsive charts for workout analytics",
      "Ensuring HIPAA compliance for health data",
      "Optimizing Core Data performance for large datasets",
    ],
    solutions: [
      "Built custom HealthKit wrapper with proper error handling",
      "Developed reusable SwiftUI chart components with animations",
      "Implemented end-to-end encryption for sensitive data",
      "Used NSFetchedResultsController with batch processing",
    ],
    type: "iOS",
    status: "Completed",
    screenshot: "/placeholder.svg?height=600&width=300",
    icon: "/placeholder.svg?height=120&width=120",
    duration: "7 months",
    teamSize: "3 developers",
    releaseDate: "2022-11-05",
    technologies: ["Kotlin", "CameraX", "TensorFlow"],
    githubUrl: "",
  },
  {
    id: "cyber-legends",
    name: "Cyber Legends",
    description: "Cyberpunk RPG with stunning visuals and deep storyline",
    longDescription: "",
    gallery: [""],
    category: "Games",
    features: [
      "Real-time workout tracking with HealthKit integration",
      "Custom SwiftUI components for data visualization",
      "Core Data persistence with CloudKit sync",
      "Apple Watch companion app with WatchKit",
      "Comprehensive unit and UI test coverage",
      "Accessibility support with VoiceOver",
      "Dark mode and dynamic type support",
      "Privacy-first approach to health data",
    ],
    challenges: [
      "Implementing complex HealthKit data synchronization",
      "Creating responsive charts for workout analytics",
      "Ensuring HIPAA compliance for health data",
      "Optimizing Core Data performance for large datasets",
    ],
    solutions: [
      "Built custom HealthKit wrapper with proper error handling",
      "Developed reusable SwiftUI chart components with animations",
      "Implemented end-to-end encryption for sensitive data",
      "Used NSFetchedResultsController with batch processing",
    ],
    type: "iOS",
    status: "Completed",
    screenshot: "/placeholder.svg?height=600&width=800",
    icon: "/placeholder.svg?height=120&width=120",
    duration: "18 months",
    teamSize: "5 developers",
    releaseDate: "2023-03-15",
    technologies: ["Unreal Engine", "C++", "Steam SDK"],
    githubUrl: "",
  },
  {
    id: "quantum-strategy",
    name: "Quantum Strategy",
    description: "Turn-based strategy with quantum mechanics",
    longDescription: "",
    gallery: [""],
    category: "Games",
    features: [
      "Real-time workout tracking with HealthKit integration",
      "Custom SwiftUI components for data visualization",
      "Core Data persistence with CloudKit sync",
      "Apple Watch companion app with WatchKit",
      "Comprehensive unit and UI test coverage",
      "Accessibility support with VoiceOver",
      "Dark mode and dynamic type support",
      "Privacy-first approach to health data",
    ],
    challenges: [
      "Implementing complex HealthKit data synchronization",
      "Creating responsive charts for workout analytics",
      "Ensuring HIPAA compliance for health data",
      "Optimizing Core Data performance for large datasets",
    ],
    solutions: [
      "Built custom HealthKit wrapper with proper error handling",
      "Developed reusable SwiftUI chart components with animations",
      "Implemented end-to-end encryption for sensitive data",
      "Used NSFetchedResultsController with batch processing",
    ],
    type: "iOS",
    status: "Prototype",
    screenshot: "/placeholder.svg?height=600&width=800",
    icon: "/placeholder.svg?height=120&width=120",
    duration: "8 weeks",
    teamSize: "Solo project",
    releaseDate: "2022-11-20",
    technologies: ["Unity", "C#", "Photon"],
    githubUrl: "",
  },
  {
    id: "neural-network-sim",
    name: "Neural Network Simulator",
    description: "Educational tool for visualizing neural networks",
    longDescription: "",
    gallery: [""],
    category: "Education",
    features: [
      "Real-time workout tracking with HealthKit integration",
      "Custom SwiftUI components for data visualization",
      "Core Data persistence with CloudKit sync",
      "Apple Watch companion app with WatchKit",
      "Comprehensive unit and UI test coverage",
      "Accessibility support with VoiceOver",
      "Dark mode and dynamic type support",
      "Privacy-first approach to health data",
    ],
    challenges: [
      "Implementing complex HealthKit data synchronization",
      "Creating responsive charts for workout analytics",
      "Ensuring HIPAA compliance for health data",
      "Optimizing Core Data performance for large datasets",
    ],
    solutions: [
      "Built custom HealthKit wrapper with proper error handling",
      "Developed reusable SwiftUI chart components with animations",
      "Implemented end-to-end encryption for sensitive data",
      "Used NSFetchedResultsController with batch processing",
    ],
    type: "iOS",
    status: "In Development",
    screenshot: "/placeholder.svg?height=600&width=800",
    icon: "/placeholder.svg?height=120&width=120",
    duration: "4 months",
    teamSize: "2 developers",
    releaseDate: "2023-07-10",
    technologies: ["Electron", "JavaScript", "TensorFlow.js"],
    githubUrl: "",
  },
];
